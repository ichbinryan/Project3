//
// Created by Ryan Read on 11/27/16.
//

#ifndef PROJECT3_SIMULATOR_H
#define PROJECT3_SIMULATOR_H

#include "graph.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


//struct router routers[MAX];

int totes_generated_packets; //also packet id
int totes_arrived_packets;
int totes_dropped_packets;

struct source_destination{  //randomly generated source destination pairs
    int source[20];
    int destination[20];
    double total_delay[20];
    int packets_sent[20];
    int packets_lost[20];
    //array for poisson distribution for sources
};

struct network{
    int * small;  //smaller numbrered node
    int * big;    //larger numbered node
    int * bandwidth; //bandwidth in bps, not MBPS!!!
    int * prop_delay; //prop_delay in seconds
};

struct source{  //redistribute into router?
    float poisson;  //distribution to generate
    int prop_delay;
};

struct packet{
    int packet_id;
    int source;
    int destination;
    int size;  //size is in bytes, can be up to 1,000,000 bytes 1mb
    int location; //-1 for on the wire, or integer for in router queue
    int queue_wait_time;
    int next_arrival_time;
    int total_arrival_time;
    int left_in_queue; //queue delay + size/bandwidth(roundedup)
};

struct router{
    int id;
    int is_source;  //is this a source?
    int is_destination; //is this a destination
    struct packet input_queue[20]; //input and output queue
    struct packet output_queue[20];
    int input_delay;
    int input_start, input_end, input_elements;
    int output_start, output_end, output_elements;
    int my_dropped_packets;  //personal dropped packets
    int my_generated_packets; //total dropped packets
    int routing_table[MAX]; //routing table generated by dijkstras
    int num_edges; //number of outgoing edges
    int edges[MAX]; //where are the edges going?
    int edge_bandwidth[MAX];  //this will be 0 to 1 Mb represented in bytes, thus 0 to 1,000,000
    int edge_propagation_delay[MAX];  //in seconds TODO: Consider changing depending on resolution
};

struct generated_graph{
    int nodes[150][100];
};


#endif //PROJECT3_SIMULATOR_H
